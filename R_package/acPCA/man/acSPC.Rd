% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acSPC.R
\name{acSPC}
\alias{acSPC}
\title{Perform sparse AC-PCA for variable selection}
\usage{
acSPC(X, Y, X4Y = NULL, c1 = NULL, c2, v_ini, v_substract = NULL,
  kernel = c("linear", "gaussian"), bandwidth = NULL, centerX = T,
  scaleX = F, scaleY = F, maxiter = 50, delta = 10^-8, filter = T)
}
\arguments{
\item{X}{the n by p data matrix, where n is the number of samples, p is the number of variables. Missing values in X should be labeled as NA. If a whole sample in X is missing, it should be removed.}

\item{Y}{the n by q confounder matrix, where n is the number of samples, q is the number of confounding factors. Missing values in Y should be labeled as NA.}

\item{X4Y}{the "X" used to calculate the empirical Hilbert Schmidt criterion. Default is set to X. Optional.}

\item{c1}{tuning parameter. Default is set to v'X4Y'KX4Yv. Optional.}

\item{c2}{tuning parameter controlling sparsity.}

\item{v_ini}{the initial v. Recommended to be the estimate of the non-sparse version.}

\item{v_substract}{the principal components to be subtracted. A p by k matrix, where k is the number of PCs to be substracted. Optional.}

\item{kernel}{the kernel to use: "linear", "gaussian".}

\item{bandwidth}{bandwidth h for Gaussian kernel. Optional.}

\item{centerX}{center the columns in X. Default is True.}

\item{scaleX}{scale the columns in X to unit standard deviation. Default is False.}

\item{scaleY}{scale the columns in Y to unit standard deviation. Default is False.}

\item{...}{other parameters}
}
\value{
Results for sparse AC-PCA
\item{v}{the sparse principal component} 
\item{u}{the u vector}
\item{converge}{whether the algorithm converged}
}
\description{
Perform sparse AC-PCA for variable selection
}
\examples{
load_all()
data(data_example5)
X <- data_example5$X ###the data matrix
Y <- data_example5$Y

result1 <- acPCA(X=X, Y=Y, lambda=1, kernel="linear")
v_ini <- result1$v[,1]
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)), 
                      v_ini=v_ini, kernel="linear")
###examples with more details are provided in the function acSPCcv
}

