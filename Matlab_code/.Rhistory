abline(v = sumr[198,i], col=4)
abline(v = sumr[199,i], col=4)
abline(v = sumr[200,i], col=4)
}
par(mfrow=c(1, 1))
plot(-log10(pvs), apply(sumr, 2, median), xlab="log10(p_value) cutoff", ylab="fold change compared with all SNPs")
gc()
library("brainMRF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github('brainMRF','linzx06')
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github('brainMRF','linzx06')
install_github('brainMRF','linzx06/brainMRF')
install_github("linzx06/brainMRF")
install_github("linzx06/Mouse_brain_RNAseq")
detach("package:brainMRF", unload=TRUE)
library("brainMRF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
git
roadmap_stringent_enhancers_with_Ensembl_ID_and_name.bed <- read.delim("~/Documents/Functional_Database/enhancer/roadmap_stringent_enhancers_with_Ensembl_ID_and_name.bed.txt", header=FALSE)
View(roadmap_stringent_enhancers_with_Ensembl_ID_and_name.bed)
gc()
enhancer <- read.delim("~/Documents/Functional_Database/enhancer/roadmap_stringent_enhancers_with_Ensembl_ID_and_name.bed.txt", header=FALSE)
enhancer[1,]
enhancer[2,]
enhancer[2,4]
enhancer[2,4]=="."
enhancer[2,4]==".."
enhancer[2,4]=="."
enhancer_k <- enhancer[which(enhancer[,4]!="."),]
enhancer_nk <- enhancer[which(enhancer[,4]=="."),]
enhancer_k[1,]
enhancer_k[2,]
?save
save(enhancer_k, file="enhancer_k.rda")
save(enhancer_nk, file="enhancer_nk.rda")
result <- read.table("~/Documents/test_ld/weight1_out/result_1-22", quote="\"", comment.char="")
result3 <- read.table("~/Documents/test_ld/weight3_out/result_1-22New", quote="\"", comment.char="")
result5 <- read.table("~/Documents/test_ld/weight5_out/result_1-22New", quote="\"", comment.char="")
result3[1,]
result[1,]
plot(log10(result1[,6]), log10(result5[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
result1 <- read.table("~/Documents/test_ld/weight1_out/result_1-22", quote="\"", comment.char="")
points(log10(result1[,6]), log10(result5[,6]), col="red", pch=20, cex=0.4)
result5 <- read.table("~/Documents/test_ld/weight5_out/result_1-22New", quote="\"", comment.char="")
result5[1,]
comb <- merge(result1,result5,by='V2',all.y=T)
comb
comb[1,]
comb[1,6]
comb[1,11]
comb15 <- merge(result1,result5,by='V2',all.y=T)
comb13 <- merge(result1,result3,by='V2',all.y=T)
plot(log10(comb15[,6]), log10(comb15[,11]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
plot(log10(comb13[,6]), log10(comb13[,11]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
abline(a=0,b=1,col="blue")
qchisq(0.001,1,lower.tail=F)
qchisq(0.0001,1,lower.tail=F)
qchisq(0.00001,1,lower.tail=F)
gc()
weight3 <- read.table("~/Documents/test_ld/weight3", quote="\"", comment.char="")
View(weight3)
plot(density(weight3[weight3[,3]==3,2]))
lines(density(weight3[weight3[,3]==1,2]))
plot(density(weight3[weight3[,3]==3,2]))
lines(density(weight3[weight3[,3]==1,2]), col="red")
hist(weight3[weight3[,3]==3,2], freq=F)
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==3,1], freq=F, breaks=100, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=100, add=T, col="red")
hist(log10(weight3[weight3[,3]==3,2]), freq=F, breaks=100)
hist(log10(weight3[weight3[,3]==1,2]), freq=F, breaks=100, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=100, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=200)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=200, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=200)
hist(weight3[weight3[,3]==3,2], freq=F, breaks=300)
hist(weight3[weight3[,3]==3,2], freq=F, breaks=1000)
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=100, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=100, add=T, col="red")
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==3,2], freq=F, breaks=100)
hist(weight3[weight3[,3]==1,2], freq=F, breaks=100, add=T, col="red")
library(SKAT)
SKAT:::SKAT_davies(5,3:1, acc=10^(-6))[[3]]
SKAT:::SKAT_davies(10,2*(3:1), acc=10^(-6))[[3]]
result1 <- read.table("~/Documents/test_ld/weight1_out/result_1-22", quote="\"", comment.char="")
result5New <- read.table("~/Documents/test_ld/weight5_out/result_1-22New", quote="\"", comment.char="")
result5 <- read.table("~/Documents/test_ld/weight5_out/result_1-22", quote="\"", comment.char="")
points(log10(result1[,6]), log10(result5[,6]), col="red", pch=20, cex=0.4)
plot(log10(result1[,6]), log10(result5[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
plot(log10(result1[,6]), log10(result5New[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
abline(a=0,b=1,col="blue")
result1[1,]
result5 <- result5New
openh <- as.vector(result1[result1[,6] > result5[,6] & result1[,6]<10^-4 & result5[,6]<10^-4, 2])
openl <- as.vector(result1[result1[,6] < result5[,6] & result1[,6]<10^-4 & result5[,6]<10^-4, 2])
sum(result5[,6]<10^-4)
sum(result1[,6]<10^-4)
openh <- as.vector(result1[result1[,6] > result5[,6] & result5[,6]<10^-4, 2])
openl <- as.vector(result1[result1[,6] < result5[,6] & result1[,6]<10^-4, 2])
sum(result5[,6]<10^-4)
sum(result1[,6]<10^-4)
for (g in openh){print(g)}
for (g in openl){print(g)}
openh <- as.vector(result1[result1[,6] > result5[,6] & result5[,6]<10^-5, 2])
openl <- as.vector(result1[result1[,6] < result5[,6] & result1[,6]<10^-5, 2])
openh <- as.vector(result1[result1[,6] > result5[,6] & result5[,6]<10^-6, 2])
openl <- as.vector(result1[result1[,6] < result5[,6] & result1[,6]<10^-6, 2])
result1[1,6]
openh <- as.vector(result1[result1[,6] > result5[,6] & result5[,6]<10^-6, 2])
openl <- as.vector(result1[result1[,6] < result5[,6] & result1[,6]<10^-6, 2])
result1
result1[1,]
plot(log10(result1[,6]), log10(result5[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
abline(a=0,b=1,col="blue")
abline(h=-4,col="green")
abline(v=-4,col="green")
openh <- result5[result1[,6] > result5[,6] & result5[,6]<10^-6, c(2, 6)]
openl <- result1[result1[,6] < result5[,6] & result1[,6]<10^-6, c(2, 6)]
openh
openh <- result5[result1[,6] > result5[,6] & result5[,6]<10^-4, c(2, 6)]
openl <- result1[result1[,6] < result5[,6] & result1[,6]<10^-4, c(2, 6)]
openh
?order
openh <- openh[order(openh[,2]),]
openh
openh <- openh[order(openh[,2]),]
openl <- openl[order(openl[,2]),]
openh
openl
for (g in openh[,1]){print(g)}
openl[1:4,]
for (g in openl[,1]){print(g)}
g1 <- result1[result5[,6]>10^-4 & result1[,6]<10^-4, 2]
g1
g1 <- as.vector(result1[result5[,6]>10^-4 & result1[,6]<10^-4, 2])
g5 <- as.vector(result1[result1[,6]>10^-4 & result5[,6]<10^-4, 2])
g5
g1
for (g in g1){print(g)}
for (g in g5){print(g)}
g1 <- as.vector(result1[result5[,6]>0.5*10^-4 & result1[,6]<0.5*10^-4, 2])
g5 <- as.vector(result1[result1[,6]>0.5*10^-4 & result5[,6]<0.5*10^-4, 2])
g1 <- as.vector(result1[result5[,6]>0.5*10^-4 & result1[,6]<0.5*10^-4, 2])
g5 <- as.vector(result1[result1[,6]>0.5*10^-4 & result5[,6]<0.5*10^-4, 2])
sum(result1[,6]<0.5*10^-4)
sum(result5[,6]<0.5*10^-4)
tmp1 <- as.vector(result1[result1[,6]<0.5*10^-4,2])
tmp5 <- as.vector(result5[result5[,6]<0.5*10^-4,2])
length(unique(c(tmp1, tmp5)))
369 + 356 - 386
result5 <- read.table("~/Documents/test_ld/weight5_out/result_1-22", quote="\"", comment.char="")
sum(result5[,6]<0.5*10^-4)
result3New <- read.table("~/Documents/test_ld/weight3_out/result_1-22New", quote="\"", comment.char="")
sum(result3New[,6]<=10^-4)
sum(result3New[,6]<=10^-4)
sum(result5New[,6]<=10^-4)
sum(result1[,6]<=10^-4)
plot(log10(result1[,6]), log10(result3New[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
result3[1,]
result3New[1,]
result3New[2,]
result3New[1,2]
34564/2
result3New[17284,2]
result3New[17283,2]
result3New[17282,2]
sum(result3New[17282:34564,6]<10^-4)
sum(result5New[17282:34564,6]<10^-4)
sum(result5New[,6]<10^-4)
sum(result1[,6]<10^-4)
result3New <- read.table("~/Documents/test_ld/weight3_out/result_1-22New", quote="\"", comment.char="")
sum(result3New[,6]<=10^-4)
sum(result5New[,6]<=10^-4)
sum(result1[,6]<=10^-4)
sum(result1[,6]<10^-4)
result1 <- read.table("~/Documents/test_ld/weight1_out/result_1-22", quote="\"", comment.char="")
sum(result1[,6]<10^-4)
plot(log10(result1[,6]), log10(result3New[,6]), xlim=c(-10, 0), ylim=c(-10, 0), cex=0.4, pch=20)
points(log10(result1[,6]), log10(result5New[,6]), col="red", pch=20, cex=0.4)
abline(a=0,b=1,col="blue")
plot(log10(result1[,6]), log10(result3New[,6]), xlim=c(-14, 0), ylim=c(-14, 0), cex=0.4, pch=20)
points(log10(result1[,6]), log10(result5New[,6]), col="red", pch=20, cex=0.4)
sum(result1[,6]<0.5*10^-4)
sum(result3New[,6]<0.5*10^-4)
sum(result5New[,6]<0.5*10^-4)
belgeim5_out <- read.table("~/Documents/test_ld/belgeim5_out", quote="\"", comment.char="")
View(belgeim5_out)
weight1_new_out <- read.table("~/Documents/test_ld/weight1_new_out", quote="\"", comment.char="")
View(weight1_new_out)
belge1_new_out <- read.table("~/Documents/test_ld/belge1_new_out", quote="\"", comment.char="")
View(belge1_new_out)
germanim5_out <- read.table("~/Documents/test_ld/germanim5_out", quote="\"", comment.char="")
View(germanim5_out)
wtcccim5_out <- read.table("~/Documents/test_ld/wtcccim5_out", quote="\"", comment.char="")
View(wtcccim5_out)
wtccc1_new_out <- read.table("~/Documents/test_ld/wtccc1_new_out", quote="\"", comment.char="")
View(wtccc1_new_out)
german1_new_out <- read.table("~/Documents/test_ld/german1_new_out", quote="\"", comment.char="")
View(german1_new_out)
sum(belge1_new_out[,6]<=0.5*10^-4)
sum(belgeim5_out[,6]<=0.5*10^-4)
sum(weight1_new_out[which(belgeim5_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
sum(weight1_new_out[which(belge1_new_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
sum(german1_new_out[,6]<=0.5*10^-4)
sum(weight1_new_out[which(german1_new_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
sum(germanim5_out[,6]<=0.5*10^-4)
sum(weight1_new_out[which(germanim5_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
sum(wtccc1_new_out[,6]<=0.5*10^-4)
sum(weight1_new_out[which(wtccc1_new_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
sum(wtcccim5_out[,6]<=0.5*10^-4)
sum(weight1_new_out[which(wtcccim5_out[,6]<=0.5*10^-4), 6]<=0.5*10^-4)
wtccc1_new_out[1,]
wtcccim5_out[1,]
sum(wtccc1_new_out[,6]<=0.5*10^-4)
sum(weight1_new_out[,6]<=0.5*10^-4)
weightim5_out <- read.table("~/Documents/test_ld/weightim5_out", quote="\"", comment.char="")
View(weightim5_out)
sum(weightim5_out[,6]<=0.5*10^-4)
g1 <- which(weight1_new_out[,6]<=0.5*10^-4)
g5 <- which(weightim5_out[,6]<=0.5*10^-4)
length(unique(c(g1))) + length(unique(c(g5))) - length(unique(c(g1, g5)))
library("brainMRF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
getpedgeR
brainMRF:::getpedgeR()
brainMRF:::getpedgeR
library(brainMRF)
getMRFDE
setwd("/Users/zhixiang/AC-PCA/R_package/")
?
?
help
?optimize
+Inf
c(0, Inf)
optimize(function(x){(x-300)^2}, interval=c(10^(-20), Inf))$minimum
optimize(function(x){(x-300)^2}, interval=c(10^(-20), 10^20))$minimum
?lgamma
phi
lgamma(20)
library("acPCA", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data(data_example1)
X <- data_example1$X ###the data matrix
rm(data_example1)
library(acPCA)
library("acPCA", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data(data_fly_worm )
names(data_fly_worm)
library(devtools)
library(roxygen2)
setwd("/Users/zhixianglin/AC-PCA/R_package/acPCA/")
document()
setwd("/Users/zhixianglin/AC-PCA/R_package/")
install("acPCA")
acPCA
calAv
calkernel
acPCAcv
rep(1:10,5)
a <- matrix(1:60, 6)
a
a[c(3,2,5)]
a[c(3,2,5),]
getwd()
setwd("/Users/zhixianglin/AC-PCA/Matlab_code/")
ls
data("data_example1")
data_example1
names(data_example1)
getwd()
writeMat("data_example1.mat", X=data_example1$X, Y=data_example1$Y, lab=data_example1$lab, true_pattern=data_example1$true_pattern)
library(R.matlab)
writeMat("data_example1.mat", X=data_example1$X, Y=data_example1$Y, lab=data_example1$lab, true_pattern=data_example1$true_pattern)
data("data_example5")
names(data_example5)
data("data_brain_w2")
names(data_brain_w2)
writeMat("data_example5.mat", X=data_example5$X, Y=data_example5$Y)
names(data_brain_w1)
data("data_brain_w1")
names(data_brain_w1)
data("data_example2")
names(data_example2)
data_example2$lab
data("data_example3")
names(data_example3)
data_example3$confound_pattern
data_example3$lab
data("data_example4")
names(data_example4)
library(acPCA)
library(R.matlab)
data("data_example1")
names(data_example1)
writeMat("data_example1.mat", X=data_example1$X, Y=data_example1$Y, lab=data_example1$lab, colors=data_example1$colors, true_pattern=data_example1$true_pattern)
data("data_example2")
names(data_example2)
writeMat("data_example2.mat", X=data_example2$X, Y=data_example2$Y, lab=data_example2$lab, colors=data_example2$colors, true_pattern=data_example2$true_pattern)
data("data_example3")
names(data_example3)
writeMat("data_example3.mat", X=data_example3$X, Y=data_example3$Y, lab=data_example3$lab, true_pattern=data_example3$true_pattern, confound_pattern=data_example3$confound_pattern)
data("data_example4")
names(data_example4)
writeMat("data_example4.mat", X=data_example4$X, Y=data_example4$Y, lab=data_example4$lab, true_pattern=data_example4$true_pattern)
data("data_example5")
names(data_example5)
writeMat("data_example5.mat", X=data_example5$X, Y=data_example5$Y)
data("data_brain_w1")
names(data_brain_w1)
writeMat("data_brain_w1.mat", X=data_brain_w1$X, Y=data_brain_w1$Y,
Yid=data_brain_w1$Yid, regions=data_brain_w1$regions, hemispheres=data_brain_w1$hemispheres,
donor_labs=data_brain_w1$donor_labs)
data("data_brain_w2")
names(data_brain_w2)
writeMat("data_brain_w2.mat", X=data_brain_w2$X, Y=data_brain_w2$Y,
Yid=data_brain_w2$Yid, regions=data_brain_w2$regions, hemispheres=data_brain_w2$hemispheres,
donor_labs=data_brain_w2$donor_labs)
data("data_fly_worm")
names(data_fly_worm)
library(acPCA)
library(R.matlab)
data("data_example1")
names(data_example1)
writeMat("data_example1.mat", X=data_example1$X, Y=data_example1$Y, lab=data_example1$lab, colors=data_example1$colors, true_pattern=data_example1$true_pattern)
data("data_example2")
names(data_example2)
writeMat("data_example2.mat", X=data_example2$X, Y=data_example2$Y, lab=data_example2$lab, colors=data_example2$colors, true_pattern=data_example2$true_pattern)
data("data_example3")
names(data_example3)
writeMat("data_example3.mat", X=data_example3$X, Y=data_example3$Y, lab=data_example3$lab, true_pattern=data_example3$true_pattern, confound_pattern=data_example3$confound_pattern)
data("data_example4")
names(data_example4)
writeMat("data_example4.mat", X=data_example4$X, Y=data_example4$Y, lab=data_example4$lab, true_pattern=data_example4$true_pattern)
data("data_example5")
names(data_example5)
writeMat("data_example5.mat", X=data_example5$X, Y=data_example5$Y)
data("data_brain_w1")
names(data_brain_w1)
writeMat("data_brain_w1.mat", X=data_brain_w1$X, Y=data_brain_w1$Y,
Yid=data_brain_w1$Yid, regions=data_brain_w1$regions, hemispheres=data_brain_w1$hemispheres,
donor_labs=data_brain_w1$donor_labs)
data("data_brain_w2")
names(data_brain_w2)
writeMat("data_brain_w2.mat", X=data_brain_w2$X, Y=data_brain_w2$Y,
Yid=data_brain_w2$Yid, regions=data_brain_w2$regions, hemispheres=data_brain_w2$hemispheres,
donor_labs=data_brain_w2$donor_labs)
data("data_fly_worm")
names(data_fly_worm)
writeMat("data_fly_worm.mat",
data_fly=data_fly_worm$data_fly,
data_worm=data_fly_worm$data_worm,
fly_time=data_fly_worm$fly_time,
worm_time=data_fly_worm$worm_time,
X=data_fly_worm$X,
Y=data_fly_worm$Y,
X_time=data_fly_worm$X_time,
X_species=data_fly_worm$X_species,
fly_gene=data_fly_worm$fly_gene
)
names(data_example1)
calkernel
K <- calkernel(data_example1$Y, "linear",1)
K[1,]
result_cv_linear <- acPCAcv(X=X, Y=Y, lambdas=seq(0, 1, 0.05), kernel="linear", nPC=2, plot=T)
data(data_example1)
X <- data_example1$X; Y <- data_example1$Y
result_cv_linear <- acPCAcv(X=X, Y=Y, lambdas=seq(0, 1, 0.05), kernel="linear", nPC=2, plot=T)
data("data_fly_worm")
seq(0, 2, 0.1)
data("data_fly_worm")
X <- data_fly_worm$X; Y <- data_fly_worm$Y
system.time(result_cv_linear <- acPCAcv(X=X, Y=Y,
lambdas=seq(0, 2, 0.1), kernel="linear", nPC=2, plot=T) )
acSPC
?crossprod
?svd
Y[,1]
K <- calkernel(Y, "linear", 1)
K
K[1,]
tmp <- svd(K)
U <- tmp$u; S <- tmp$d
S
posS <- which(S>0)
S[posS]
result <- acPCA(X=data_fly_worm$X, Y=data_fly_worm$Y, lambda=10^5,
kernel="linear", nPC=2)
par(mfrow=c(1,1), pin=c(3, 3))
plot(result$Xv[,1], result$Xv[,2], xlab="PC 1", ylab="PC 2",
col="red", type="n", main="fly+worm, AC-PCA, rank",
xlim=c(-(max(abs(result$Xv[,1]))+13), max(abs(result$Xv[,1]))+13),
ylim=c(-(max(abs(result$Xv[,2]))+13), max(abs(result$Xv[,2]))+13))
text(result$Xv[,1], result$Xv[,2],
labels=data_fly_worm$X_time,
col=c(rep("red", 12), rep("blue", 24)) )
plot(result$Xv[,1], result$Xv[,2], xlab="PC 1", ylab="PC 2",
col="red", type="n", main="fly+worm, AC-PCA, rank",
xlim=c(-(max(abs(result$Xv[,1]))+13), max(abs(result$Xv[,1]))+13),
ylim=c(-(max(abs(result$Xv[,2]))+13), max(abs(result$Xv[,2]))+13))
text(result$Xv[,1], result$Xv[,2],
labels=data_fly_worm$X_time,
col=c(rep("red", 12), rep("blue", 24)) )
legend("topright", legend = c("fly", "worm"),
lty=1, col=c("red","blue"),lwd=1.5,seg.len=1)
par(mfrow=c(1,1))
plot(result$Xv[,1], result$Xv[,2], xlab="PC 1", ylab="PC 2",
col="red", type="n", main="fly+worm, AC-PCA, rank",
xlim=c(-(max(abs(result$Xv[,1]))+13), max(abs(result$Xv[,1]))+13),
ylim=c(-(max(abs(result$Xv[,2]))+13), max(abs(result$Xv[,2]))+13))
text(result$Xv[,1], result$Xv[,2],
labels=data_fly_worm$X_time,
col=c(rep("red", 12), rep("blue", 24)) )
legend("topright", legend = c("fly", "worm"),
lty=1, col=c("red","blue"),lwd=1.5,seg.len=1)
proj
acPCA:::proj
getnorm2
acPCA:::getnorm2
acPCA:::proj_hp
acPCA:::proj_l2g_getl
acPCA:::topthresfilter
data("data_example5")
data(data_example5)
X <- data_example5$X ###the data matrix
Y <- data_example5$Y
result1cv <- acPCAcv(X=X, Y=Y, lambdas=seq(0, 2, 0.05),
kernel="linear", nPC=2, plot=F, quiet=T)
result1cv <- acPCAcv(X=X, Y=Y, lambdas=seq(0, 2, 0.05),
kernel="linear", nPC=2, plot=T, quiet=T)
result1cv$best_lambda
1==1 | 2==1
1==1 || 2==1
tt =matrix(1:60, ncol=10) %*% sample(10, 10)
dim(tt)
as.matrix(1:6)
result1 <- acPCA(X=X, Y=Y, lambda=result1cv$best_lambda,
kernel="linear", nPC=2)
result1 <- acPCA(X=X, Y=Y, lambda=0.15,
kernel="linear", nPC=2)
v_ini <- as.matrix(result1$v[,1])
resultcv_spc1_coarse <- acSPCcv( X=X, Y=Y, c2s=seq(1, 0, -0.1)*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", plot=T, quiet=F, fold=10)
system.time( resultcv_spc1_coarse <- acSPCcv( X=X, Y=Y, c2s=seq(1, 0, -0.1)*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", plot=T, quiet=F, fold=10) )
acSPC
result_spc1 <- acSPCcv( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear")
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear")
result_spc1$v
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=F)
result_spc1$v
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
detach("package:acPCA", unload=TRUE)
dim(v_ini)
v_ini[1:10,]
source('~/AC-PCA/Matlab_code/archive/debug_matlab.R')
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
debugSource('~/AC-PCA/Matlab_code/archive/debug_matlab.R')
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
dim(M)
S <- tmp$d; V <- tmp$v
S
V
dim(S)
dim(V)
dim(M)
S
c1
c2
X[,1]
delta
maxiter
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
val <- -Inf;
tmp <- X%*%v;
u <- tmp/getnorm2(tmp);
u
utx <- t(u)%*%X;
tmin <- 0; tmax <- getnorm2(utx);
utx
dim(utx)
tmax
tmin
tmpproj <- proj( M, S, V, utx, c1, c2, v, tmin, tmax, iter)
debugSource('~/AC-PCA/Matlab_code/archive/debug_matlab.R')
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
tmpproj <- proj( M, S, V, utx, c1, c2, v, tmin, tmax, iter)
vnew <- tmpproj$v;
dim(vnew <- tmpproj$v;)
dim(vnew)
vnew[1:10,]
result_spc1 <- acSPC( X=X, Y=Y, c2=0.5*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", filter=T)
result_spc1$v
system.time( resultcv_spc1_coarse <- acSPCcv( X=X, Y=Y, c2s=seq(1, 0, -0.1)*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", plot=T, quiet=F, fold=10) )
library("acPCA", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
system.time( resultcv_spc1_coarse <- acSPCcv( X=X, Y=Y, c2s=seq(1, 0, -0.1)*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", plot=T, quiet=F, fold=10) )
system.time( resultcv_spc1_coarse <- acSPCcv( X=X, Y=Y, c2s=seq(1, 0, -0.1)*sum(abs(v_ini)),
v_ini=v_ini, kernel="linear", plot=F, quiet=T, fold=10) )
detach("package:acPCA", unload=TRUE)
